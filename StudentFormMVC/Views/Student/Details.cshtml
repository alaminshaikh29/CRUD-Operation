@model StudentFormMVC.Models.Students
    @{ 
        //ViewBag is the data holder that enables the definition of a dynamic property and holds the data that can be passed from a controller to a view"
        ViewBag.Title = "Details";
    }
<h3>Details</h3>
<div>
    <h5>Student Full Information</h5>
    <hr />

    <dl class="dl-horizontal">
        @*DisplayNameFor is showing property's label and DisplayFor is presenting property's value inside the view*@
        @*The lambda operator => divides a lambda expression into two parts.
        The left side is the input parameter and the right side is the lambda body.*@
        <dt>@Html.DisplayNameFor(model => model.Name)</dt>
        <dd> @Html.DisplayFor(model => model.Name)</dd>

        <dt>@Html.DisplayNameFor(model => model.Email)</dt>
        <dd>@Html.DisplayFor(model => model.Email)</dd>

        <dt>@Html.DisplayNameFor(model => model.Phone)</dt>
        <dd>@Html.DisplayFor(model => model.Phone)</dd>

        <dt>@Html.DisplayNameFor(model => model.Address)</dt>
        <dd>@Html.DisplayFor(model => model.Address)</dd>

        <dt>@Html.DisplayNameFor(model => model.Gender)</dt>
        <dd>@Html.DisplayFor(model => model.Gender)</dd>

        <dt>@Html.DisplayNameFor(model => model.DateOfBirth)</dt>
        <dd>@Html.DisplayFor(model => model.DateOfBirth)</dd>

        <dt>@Html.DisplayNameFor(model => model.IsActive)</dt>
        <dd>@Html.DisplayFor(model => model.IsActive)</dd>
    </dl>

</div>
<p>
    @*link text ,action method name*@
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id })|
    @Html.ActionLink("Back To List", "Index");
</p>
