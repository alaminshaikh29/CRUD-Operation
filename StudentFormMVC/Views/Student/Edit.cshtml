@model StudentFormMVC.Models.Students

@{
    /*dynamic property,data can be passed controller to view*/
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    //It verifies the tokens before accepting the request into ASP.NET MVC controller action which prevents the Cross Site Request Forgery.

                @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Student</h4>
    <hr />
    @*//ValidationSummary is used to display error message at a fixed and only place*@

    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Name)
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email)
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phone)
        <div class="col-md-10">
            @Html.EditorFor(model => model.Phone)
            @Html.ValidationMessageFor(model => model.Phone)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address)
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address)
            @Html.ValidationMessageFor(model => model.Address)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender)
        <div class="col-md-10">
            Male
            @Html.RadioButtonFor(model => model.Gender, "Male")
            Female
            @Html.RadioButtonFor(model => model.Gender, "Female")
            Others
            @Html.RadioButtonFor(model => model.Gender, "Others")
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DateOfBirth)
        <div class="textbox">
            @Html.EditorFor(model => model.DateOfBirth, "{0:dd/MM/yyyy}")
            @Html.ValidationMessageFor(model => model.DateOfBirth)
        </div>
    </div>

@*<div class="col-md-10">
    @Html.LabelFor(model => model.DateOfBirth)
    <div class="textbox">
        @Html.EditorFor(model => model.DateOfBirth)
        @Html.ValidationMessageFor(model => model.DateOfBirth)
    </div>
</div>*@


    <div class="col-md-10">
        <div class="checkbox">
            @Html.EditorFor(model => model.IsActive)
            @Html.ValidationMessageFor(model => model.IsActive)
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.IsActive)
            <div class="col-md-10">
                @Html.CheckBox("IsActive", true)

                @Html.ValidationMessageFor(model => model.IsActive)
            </div>
        </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Update" class="btn btn-dark" />
        </div>
    </div>
</div>
}


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}